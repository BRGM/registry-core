/* CVS $Id: $ */
package com.epimorphics.registry.vocab; 
import org.apache.jena.rdf.model.*;
import org.apache.jena.ontology.*;
 
/**
 * Vocabulary definitions from src/main/vocabs/ldp.ttl 
 * @author Auto-generated by schemagen on 16 May 2015 15:45 
 */
public class Ldp {
    /** <p>The ontology model that holds the vocabulary terms</p> */
    private static OntModel m_model = ModelFactory.createOntologyModel( OntModelSpec.OWL_MEM, null );
    
    /** <p>The namespace of the vocabulary as a string</p> */
    public static final String NS = "http://www.w3.org/ns/ldp#";
    
    /** <p>The namespace of the vocabulary as a string</p>
     *  @see #NS */
    public static String getURI() {return NS;}
    
    /** <p>The namespace of the vocabulary as a resource</p> */
    public static final Resource NAMESPACE = m_model.createResource( NS );
    
    /** <p>Links a resource with constraints that the server requires requests like creation 
     *  and update to conform to.</p>
     */
    public static final OntProperty constrainedBy = m_model.createOntProperty( "http://www.w3.org/ns/ldp#constrainedBy" );
    
    /** <p>Links a container with resources created through the container.</p> */
    public static final OntProperty contains = m_model.createOntProperty( "http://www.w3.org/ns/ldp#contains" );
    
    /** <p>Indicates which predicate is used in membership triples, and that the membership 
     *  triple pattern is &lt; membership-constant-URI , object-of-hasMemberRelation, 
     *  member-URI &gt;.</p>
     */
    public static final OntProperty hasMemberRelation = m_model.createOntProperty( "http://www.w3.org/ns/ldp#hasMemberRelation" );
    
    /** <p>Indicates which triple in a creation request should be used as the member-URI 
     *  value in the membership triple added when the creation request is successful.</p>
     */
    public static final OntProperty insertedContentRelation = m_model.createOntProperty( "http://www.w3.org/ns/ldp#insertedContentRelation" );
    
    /** <p>Indicates which predicate is used in membership triples, and that the membership 
     *  triple pattern is &lt; member-URI , object-of-isMemberOfRelation, membership-constant-URI 
     *  &gt;.</p>
     */
    public static final OntProperty isMemberOfRelation = m_model.createOntProperty( "http://www.w3.org/ns/ldp#isMemberOfRelation" );
    
    /** <p>LDP servers should use this predicate as the membership predicate if there 
     *  is no obvious predicate from an application vocabulary to use.</p>
     */
    public static final OntProperty member = m_model.createOntProperty( "http://www.w3.org/ns/ldp#member" );
    
    /** <p>Indicates the membership-constant-URI in a membership triple. Depending upon 
     *  the membership triple pattern a container uses, as indicated by the presence 
     *  of ldp:hasMemberRelation or ldp:isMemberOfRelation, the membership-constant-URI 
     *  might occupy either the subject or object position in membership triples.</p>
     */
    public static final OntProperty membershipResource = m_model.createOntProperty( "http://www.w3.org/ns/ldp#membershipResource" );
    
    /** <p>Link to a page sequence resource, as defined by LDP Paging. Typically used 
     *  to communicate the sorting criteria used to allocate LDPC members to pages.</p>
     */
    public static final OntProperty pageSequence = m_model.createOntProperty( "http://www.w3.org/ns/ldp#pageSequence" );
    
    /** <p>The collation used to order the members across pages in a page sequence when 
     *  comparing strings.</p>
     */
    public static final OntProperty pageSortCollation = m_model.createOntProperty( "http://www.w3.org/ns/ldp#pageSortCollation" );
    
    /** <p>Link to the list of sorting criteria used by the server in a representation. 
     *  Typically used on Link response headers as an extension link relation URI 
     *  in the rel= parameter.</p>
     */
    public static final OntProperty pageSortCriteria = m_model.createOntProperty( "http://www.w3.org/ns/ldp#pageSortCriteria" );
    
    /** <p>The ascending/descending/etc order used to order the members across pages 
     *  in a page sequence.</p>
     */
    public static final OntProperty pageSortOrder = m_model.createOntProperty( "http://www.w3.org/ns/ldp#pageSortOrder" );
    
    /** <p>Predicate used to specify the order of the members across a page sequence's 
     *  in-sequence page resources; it asserts nothing about the order of members 
     *  in the representation of a single page.</p>
     */
    public static final OntProperty pageSortPredicate = m_model.createOntProperty( "http://www.w3.org/ns/ldp#pageSortPredicate" );
    
}
