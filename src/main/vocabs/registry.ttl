# (c) Epimorphics Ltd, 2012

@prefix rdf:  <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix owl:  <http://www.w3.org/2002/07/owl#> .
@prefix xsd:  <http://www.w3.org/2001/XMLSchema#> .
@prefix dct:  <http://purl.org/dc/terms/> .
@prefix dc:   <http://purl.org/dc/elements/1.1/> .
@prefix foaf: <http://xmlns.com/foaf/0.1/> .
@prefix skos: <http://www.w3.org/2004/02/skos/core#> .
@prefix version:  <http://purl.org/linked-data/version#> .
@prefix ldp:  <http://www.w3.org/ns/ldp#> .
@prefix ssd:  <http://www.w3.org/ns/sparql-service-description#> .
@prefix vs:   <http://www.w3.org/2003/06/sw-vocab-status/ns#> .

@prefix reg:  <http://purl.org/linked-data/registry#> .

<http://purl.org/linked-data/registry>  a owl:Ontology;
    rdfs:label "Registry ontology"@en;
    rdfs:comment "Core ontology for linked data registry services. Based on ISO19135 but heavily modified to suit Linked Data representations and applications."@en;
    dc:creator  "Dave Reynolds";     # As a string to enable documentation tool to work
    dc:date     "2012-11-11"^^xsd:date;
    owl:versionInfo "0.2";
    # For documentation tools
    dc:description"Core ontology for linked data registry services. Based on ISO19135 but heavily modified to suit Linked Data representations and applications."@en;
    dc:description <https://github.com/der/ukl-registry-poc/wiki/images/registry-diagram.png> ;
    .

# -- Registers ------------------------------------------------------

reg:Register    a owl:Class, version:VersionedThing, ldp:Container;
    rdfs:label "Register"@en;
    rdfs:comment "Represents a collection of registered items, together with some associated governance regime. If one or more licenses is stated then each license applies to all the entries in the register. "@en;
    rdfs:subClassOf [owl:onProperty rdfs:label;       owl:minCardinality 1];
    rdfs:subClassOf [owl:onProperty dct:description;  owl:minCardinality 1];
    rdfs:subClassOf [owl:onProperty reg:owner;        owl:cardinality    1];       
    rdfs:subClassOf [owl:onProperty reg:manager;      owl:cardinality    1];
    rdfs:subClassOf [owl:onProperty dct:license;      owl:minCardinality 0];
    rdfs:subClassOf [owl:onProperty reg:containedItemClass; owl:minCardinality 0];
    rdfs:subClassOf [owl:onProperty reg:operatingLanguage;  owl:minCardinality 0]; 
    rdfs:subClassOf [owl:onProperty reg:governancePolicy;   owl:minCardinality 0]; 
    rdfs:subClassOf [owl:onProperty reg:validationQuery;    owl:minCardinality 0]; 
    rdfs:subClassOf [owl:onProperty reg:dateOfLastChange;   owl:cardinality    1];
    .

#@@ Put in note that skos:prefLabel is a rdfs:label and still meets the requirement

reg:operatingLanguage    a owl:ObjectProperty;
    rdfs:label "operating language"@en;
    rdfs:comment "Indicates a language supported by the register and the items within it. The language should be indicated by a resource within a well-maintained URI set such as the Library of Congress language URIs e.g. http://id.loc.gov/vocabulary/iso639-1/en"@en;
    rdfs:domain reg:Register;
    rdfs:range  rdfs:Resource;
    .

reg:dateOfLastChange    a owl:DatatypeProperty;
    rdfs:label "date of last change"@en;
    rdfs:comment "The time of the most recent change of status of an item within the register (includes addition of new items). This property may be computed on demand rather than stored since it is intrinsically non-monotonic"@en;
    rdfs:domain reg:Register;
    rdfs:range  xsd:datetime;
    .

reg:owner a owl:ObjectProperty;
    rdfs:label "owner"@en;
    rdfs:comment "The owner of the register, may be a person (foaf:Person) or an organization (org:Organization). The owner has final authority over the contents of the regster."@en;
    rdfs:subPropertyOf dct:publisher;
    rdfs:domain reg:Register;
    rdfs:range foaf:Agent;
    .
    
reg:manager a owl:ObjectProperty;
    rdfs:label "manager"@en;
    rdfs:comment "The manager of the register, may be a person (foaf:Person) or an organization (org:Organization). Operates the register on behalf of the owner, makes day to day decisions on acceptance of entries based on agreed principles but it may be possible to appeal to the owner to override a decision by the manager."@en;
    rdfs:domain reg:Register;
    rdfs:range foaf:Agent;
    .
    
reg:containedItemClass a owl:ObjectProperty;
    rdfs:label "contained item class"@en;
    rdfs:comment "A class of entities that can occur in this register"@en;
    rdfs:domain reg:Register;
    rdfs:range  owl:Class;
    .

reg:subregister a owl:ObjectProperty;
    rdfs:label "subregister"@en;
    rdfs:comment "Indicates a register that is itself an entry in this principle register."@en;
    rdfs:domain reg:Register;
    rdfs:range  reg:Register;
    .

reg:governancePolicy a owl:ObjectProperty;
    rdfs:label "governance policy"@en;
    rdfs:comment "A resource, such as a web accessible-document, which describes the governance policy applicable to this register."@en;
    rdfs:domain reg:Register;
    rdfs:range  rdfs:Resource;
    .

# -- RegisterItems ------------------------------------------------------

reg:RegisterItem    a owl:Class, version:VersionedThing;
    rdfs:label "RegisterItem"@en;
    rdfs:comment "A metadata record for an entry in a register."@en;
    rdfs:subClassOf [owl:onProperty rdfs:label;        owl:minCardinality 1];
    rdfs:subClassOf [owl:onProperty dct:description;   owl:minCardinality 0];
    rdfs:subClassOf [owl:onProperty dct:dateSubmitted; owl:cardinality    1];
    rdfs:subClassOf [owl:onProperty dct:dateAccepted;  owl:maxCardinality 1];
    rdfs:subClassOf [owl:onProperty reg:status;        owl:minCardinality 1];
    rdfs:subClassOf [owl:onProperty reg:definition;    owl:cardinality    1];
    rdfs:subClassOf [owl:onProperty reg:submitter;     owl:cardinality    1];
    rdfs:subClassOf [owl:onProperty reg:category;      owl:minCardinality 0];
    rdfs:subClassOf [owl:onProperty reg:itemClass;     owl:minCardinality 1];
    rdfs:subClassOf [owl:onProperty reg:notation;      owl:maxCardinality 1];
    rdfs:subClassOf [owl:onProperty dct:license;       owl:minCardinality 0];
    rdfs:subClassOf [owl:onProperty reg:predecessor;   owl:minCardinality 0];
    rdfs:subClassOf [owl:onProperty reg:alias;         owl:minCardinality 0];
    rdfs:subClassOf [owl:onProperty reg:representationOf;  owl:minCardinality 0];
    rdfs:subClassOf [owl:onProperty reg:hasView;        owl:minCardinality 0];

    version:rigidProperty reg:register, reg:notation, reg:itemClass, reg:predecessor, reg:submitter;
  .

reg:definition a owl:ObjectProperty;
    rdfs:label "definition"@en;
    rdfs:comment "The entity which has been registered."@en;
    rdfs:domain  reg:RegisterItem;
    rdfs:range   reg:EntityReference;
  .
# TODO  "definition" is ISO19135 terminology but not appropriate for all intended usage (e.g. registering datasets)
#       would prefer reg:item or reg:entity

reg:register a owl:ObjectProperty;
    rdfs:label "register"@en;
    rdfs:comment "The register in which this item has been registered."@en;
    rdfs:domain  reg:RegisterItem;
    rdfs:range   reg:Register;
  .

reg:predecessor a owl:ObjectProperty;
    rdfs:label "predecessor"@en;
    rdfs:comment "An item which has been replaced this one within the register. Should be asserted between hub resources (VersionedThing)."@en;
    rdfs:domain  reg:RegisterItem;
    rdfs:range   reg:RegisterItem;
  .

reg:category a owl:ObjectProperty;
    rdfs:label "category"@en;
    rdfs:comment "Optional classification for a registered item within one or more SKOS classification schemes to support navigation and discovery. Orthogonal to the structure provided by the register hierarchy which is about governance."@en;
    rdfs:domain  reg:RegisterItem;
    rdfs:range   skos:Concept;
  .

reg:notation    a owl:DatatypeProperty;
    rdfs:label "notation"@en;
    rdfs:comment "A short text string which can be used to denote the register item. Must be unique within the register. If available it should be used as the path segment, relative to the parent register, for the RegisterItem (and for the item itself, if managed). Restricted to be a syntactically legal URI segment (i.e. *pchar)."@en;
    rdfs:domain reg:ItemRecord;
    rdfs:range  xsd:string;
    .

reg:itemClass    a owl:ObjectProperty;
    rdfs:label "item class"@en;
    rdfs:comment "The type of the entity that this record is about. Note that it may be possible to register a non-RDF resource in which case this property provides a way to state the intended class of the entity even though no direct RDF assertion of type is available."@en;
    rdfs:domain reg:ItemRecord;
    rdfs:range  rdfs:Class;
    .

reg:submitter a owl:ObjectProperty;
    rdfs:label "submitter"@en;
    rdfs:comment "The person or organization who originally submitted this register entry. Subsequent chages to the entry may have been made by other agents."@en;
    rdfs:subPropertyOf dct:publisher;
    rdfs:domain reg:RegisterItem;
    rdfs:range foaf:Agent;
    .

# -- Status ------------------------------------------------------

reg:status    a owl:ObjectProperty;
    rdfs:label "status"@en;
    rdfs:comment "The status of this register entry"@en;
    rdfs:domain reg:RegisterItem;
    rdfs:range  reg:Status;
    .

reg:Status    a owl:Class;
    rdfs:label "Status"@en;
    rdfs:comment "Open set of status code for entries in a register"@en;
    rdfs:subClassOf skos:Concept;
    .

reg:StatusScheme a skos:ConceptScheme;
    rdfs:label "Status Scheme"@en;
    rdfs:comment "Concept scheme containing registry status codes"@en;
    .

reg:statusProposed a skos:Concept, reg:Status;
    skos:prefLabel "proposed"@en;
    skos:altlabel "not valid"@en;
    rdfs:comment "A proposed entry, may not be ready for use."@en;
    skos:topConceptOf reg:StatusScheme;
    .

reg:statusValid a skos:Concept, reg:Status;
    skos:prefLabel "valid"@en;
    skos:altlabel "accepted"@en;
    rdfs:comment "An entry that has been accepted into the register and is deemed fit for use."@en;
    skos:topConceptOf reg:StatusScheme;
    .

reg:statusExperimental a skos:Concept, reg:Status;
    skos:prefLabel "experimental"@en;
    skos:altlabel "provisional"@en;
    rdfs:comment "An entry that has been accepted into the register temporarily and may be subject to change or withdrawal. An experimental entry may or may not be also marked valid."@en;
    skos:topConceptOf reg:StatusScheme;
    .

reg:statusSuperseded a skos:Concept, reg:Status;
    skos:prefLabel "superseded"@en;
    skos:altlabel "replaced"@en;
    rdfs:comment "An entry that has been replaced by a new alternative which should be used instead. A superseded entry will also be marked deprecated."@en;
    skos:topConceptOf reg:StatusScheme;
    .

reg:statusRetired a skos:Concept, reg:Status;
    skos:prefLabel "retired"@en;
    skos:altlabel "withdrawn"@en;
    rdfs:comment "An entry that has been withdrawn from use. A retired entry will also be marked deprecated."@en;
    skos:topConceptOf reg:StatusScheme;
    .

reg:statusDeprecated a skos:Concept, reg:Status;
    skos:prefLabel "deprecated"@en;
    rdfs:comment "An entry that has be retired or replaced and is no longer to be used."@en;
    skos:topConceptOf reg:StatusScheme;
    .

# -- EntityReference ------------------------------------------------------

reg:EntityReference a owl:Class;
    rdfs:label "Entity Reference"@en;
    rdfs:comment "A reference to some internal or external Linked Data resource. The reg:reference gives the URI of the resource being referenced. If a reg:sourceGraph value is present then it is the URI for a named graph within the Registry containing the properties of the referenced entity."@en;
    rdfs:subClassOf [owl:onProperty reg:entity;        owl:cardinality 1];
    rdfs:subClassOf [owl:onProperty reg:sourceGraph;   owl:maxCardinality 1];
    .

reg:entity a owl:ObjectProperty;
    rdfs:label "entity"@en;
    rdfs:comment "The RDF resource identified by an entity reference"@en;
    rdfs:domain reg:EntityReference;
    rdfs:range  rdfs:Resource;
    .

reg:sourceGraph a owl:ObjectProperty;
    rdfs:label "source graph"@en;
    rdfs:comment "A resource represented an RDF graph (within the Registry's SPARQL dataset) containing the properties of the reference entity. If not present then assume default graph."@en;
    rdfs:domain reg:EntityReference;
    rdfs:range  ssd:Graph;
    .

# -- TODO ------------------------------------------------------

# Support for delegated registers

# Below here is experimental, based on earlier Epimorphics explorations

# -- Alias management ------------------------------------------------------

reg:alias    a owl:ObjectProperty;
    vs:term_status "experimental";
    rdfs:label "alias"@en;
    rdfs:comment "An alternative URI for the entity, the alias resource is regarded by this register as owl:sameAs the definition entity"@en;
    rdfs:domain reg:RegisterItem;
    rdfs:range  reg:EntityReference;
    .

reg:representationOf a owl:ObjectProperty;
    vs:term_status "experimental";
    rdfs:label "representation of"@en;
    rdfs:comment "A resource, typically a real-world object, which the registered entity is a representation for."@en;
    rdfs:domain reg:RegisterItem;
    .

# -- Validation ------------------------------------------------------

reg:validationQuery a owl:DatatypePropery;
    rdfs:label "validation query"@en;
    rdfs:comment "The source of a SPARQL ASK query which can be used to validate a proposed entry in this register"@en;
    rdfs:domain reg:Register;
    rdfs:range  xsd:string;
    .

# -- Views ------------------------------------------------------

reg:hasView    a owl:ObjectProperty;
    vs:term_status "experimental";
    rdfs:label "has view"@en;
    rdfs:comment "Indicates a specification for a view available for the entity described by this record. If the entity is itself a delegated register then the view provides a pattern for accessing all items within the delegated register. Particularly applicable to cases where the entity is not a RDF resource but where some service (such as a Web Feature Service) can provide a view of the entity."@en;
    rdfs:domain reg:RegisterItem;
    rdfs:range  reg:View;
    .

reg:delegationView    a owl:ObjectProperty;
    vs:term_status "experimental";
    rdfs:label "delegation view"@en;
    rdfs:comment "Default view for delegated resources, URL rewrite used A view used to redirect requests for delegated resources."@en;
    rdfs:domain reg:RegisterItem;
    rdfs:range  reg:View;
    rdfs:subPropertyOf reg:hasView;
    .

reg:View    a owl:Class;
    vs:term_status "experimental";
    rdfs:label "View"@en;
    rdfs:comment "Specifies a view available for a registered item"@en;
    rdfs:subClassOf [owl:onProperty rdfs:label;       owl:minCardinality 0];  # used to name the view
    rdfs:subClassOf [owl:onProperty dct:format;       owl:minCardinality 0];  # e.g. mime type
    rdfs:subClassOf [owl:onProperty reg:urlMatch;     owl:cardinality    1];
    rdfs:subClassOf [owl:onProperty reg:urlRewrite;   owl:cardinality    1];
    rdfs:subClassOf [owl:onProperty reg:urlProxy;     owl:cardinality    1];
    .

reg:urlMatch   a owl:DatatypeProperty;
    vs:term_status "experimental";
    rdfs:label "url match"@en;
    rdfs:comment "A regex which is matched against the incoming request as part of a view forwarding"@en;
    rdfs:domain reg:View;
    rdfs:range  xsd:string;
    .

reg:urlRewrite   a owl:DatatypeProperty;
    vs:term_status "experimental";
    rdfs:label "url rewrite"@en;
    rdfs:comment "A template generating the rewritten URL to forward to, can include $N back references to match groups"@en;
    rdfs:domain reg:View;
    rdfs:range  xsd:string;
    .

# TODO consider adding reg:matchCond to do mod_rewrite style checking of headers and binding of %N rewrite references

reg:urlProxy   a owl:DatatypeProperty;
    vs:term_status "experimental";
    rdfs:label "url proxy"@en;
    rdfs:comment "Flag which sets whether the rewritten URL should be proxied or redirected (302)"@en;
    rdfs:domain reg:View;
    rdfs:range  xsd:boolean;
    .

